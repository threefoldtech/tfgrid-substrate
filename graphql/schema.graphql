" All transfers "
type Transfer @entity {
  from: String!
  to: String!
  value: BigInt!
  comment: String @fulltext(query: "commentSearch")
  block: Int!
} 

type Entity @entity {
  grid_version: Int!
  entityId: Int!
  name: String!
  countryId: Int
  cityId: Int
  address: String!
}

type Twin @entity {
  grid_version: Int!
  twinId: Int!
  address: String!
  ip: String!
}

type EntityProof @entity {
  entityId: Int!
  signature: String!
  twinRel: Twin!
}

type Farm @entity {
  grid_version: Int!
  farm_id: Int!
  name: String!
  twinId: Int!
  pricingPolicyId: Int!
  certification_type: CertificationType!
  countryId: Int
  cityId: Int
}

enum CertificationType {
  None
  Silver
  Gold
}

type Node @entity {
  grid_version: Int!
  node_id: Int!
  farm_id: Int!
  location: Location!
  countryId: Int
  cityId: Int
  address: String!
  pubKey: String!
  hru: Int
  sru: Int
  cru: Int
  mru: Int
  role: String!
}

type Location @entity {
  longitude: String!
  latitude: String!
}

type PricingPolicy @entity {
  grid_version: Int!
  pricingPolicyId: Int!
  name: String!
  currency: String!
  su: Int!
  cu: Int!
  nu: Int!
}

type Country @entity {
  id: Int!
  code: String!
  name: String!
}

type City @entity {
  id: Int!
  country_id: Int!
  name: String!
}

type ExecutedVestingWithdrawal @entity {
  from: String!
  to: String!
  value: Int!
  tx_xdr: String!
  block: Int!
}

type ExpiredVestingWithdrawal @entity {
  from: String!
  to: String!
  value: Int!
  tx_xdr: String!
  block: Int!
}

type FailedVestingWithdrawal @entity {
  from: String!
  to: String!
  value: Int!
  tx_xdr: String!
  block: Int!
  reason: String!
}